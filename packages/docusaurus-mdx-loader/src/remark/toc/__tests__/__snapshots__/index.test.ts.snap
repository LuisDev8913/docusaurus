// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inline code should be escaped 1`] = `
"export const toc = [
	{
		value: '<code>&lt;Head /&gt;</code>',
		id: 'head-',
		level: 2
	},
	{
		value: '<code>&lt;Head&gt;Test&lt;/Head&gt;</code>',
		id: 'headtesthead',
		level: 3
	},
	{
		value: '<code>&lt;div /&gt;</code>',
		id: 'div-',
		level: 2
	},
	{
		value: '<code>&lt;div&gt; Test &lt;/div&gt;</code>',
		id: 'div-test-div',
		level: 2
	},
	{
		value: '<code>&lt;div&gt;&lt;i&gt;Test&lt;/i&gt;&lt;/div&gt;</code>',
		id: 'divitestidiv',
		level: 2
	}
];

## \`<Head />\`

### \`<Head>Test</Head>\`

## \`<div />\`

## \`<div> Test </div>\`

## \`<div><i>Test</i></div>\`
"
`;

exports[`non text phrasing content 1`] = `
"export const toc = [
	{
		value: '<em>Emphasis</em>',
		id: 'emphasis',
		level: 2
	},
	{
		value: '<strong>Importance</strong>',
		id: 'importance',
		level: 3
	},
	{
		value: '<del>Strikethrough</del>',
		id: 'strikethrough',
		level: 2
	},
	{
		value: '<i>HTML</i>',
		id: 'html',
		level: 2
	},
	{
		value: '<code>inline.code()</code>',
		id: 'inlinecode',
		level: 2
	}
];

## _Emphasis_

### **Importance**

## ~~Strikethrough~~

## <i>HTML</i>

## \`inline.code()\`
"
`;
