aliases:
  - &root-yarn |
    yarn install --non-interactive --cache-folder ~/.cache/yarn

  - &root-restore-yarn-cache
    keys:
      - root-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # Fallback in case checksum fails
      - root-yarn-{{ .Branch }}-

  - &root-save-yarn-cache
    paths:
      - node_modules
      - ~/.cache/yarn
    key: root-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}

  - &filter-only-master
    branches:
      only:
        - master

defaults: &defaults
  working_directory: ~/docusaurus
  docker:
    - image: circleci/node:12
  resource_class: large

version: 2
jobs:
  tests-v1:
    <<: *defaults
    steps:
      - checkout
      - restore-cache: *root-restore-yarn-cache
      - run: *root-yarn
      - save-cache: *root-save-yarn-cache
      - run:
          name: Run Test Suites
          command: yarn test:v1

  # The CIRCLE_ variables are defined during the CircleCI build process
  # https://circleci.com/docs/1.0/environment-variables/
  deploy-website-v1:
    <<: *defaults
    steps:
      - checkout
      - restore-cache: *root-restore-yarn-cache
      - run: *root-yarn
      - save-cache: *root-save-yarn-cache
      - run:
          name: Configure GitHub Bot
          # Do not do this if we don't have the right org (facebook), or if this is just a pull request
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME == "facebook" && -z $CIRCLE_PR_USERNAME ]]; then
              git config --global user.email "docusaurus-bot@users.noreply.github.com"
              git config --global user.name "Website Deployment Script"
              echo "machine github.com login docusaurus-bot password $DOCUSAURUS_PUBLISH_TOKEN" > ~/.netrc
            fi
      - run:
          name: Deploy v1 Website
          # Skip the deploy if we don't have the right org (facebook), or if this is just a pull request
          command: |
            if ! git diff-tree --no-commit-id --name-only -r HEAD | grep -E "(crowdin-v1.yml)|(docusaurus-1\.x\/.*)|(website-1\.x\/.*)"; then
              echo "Skipping deploy. No relevant v1 website files have changed"
            elif [[ $CIRCLE_PROJECT_USERNAME == "facebook" && -z $CIRCLE_PR_USERNAME ]]; then
              echo "Deploying website v1..."
              cd website-1.x

              # install Docusaurus and generate file of English strings
              yarn run write-translations

              # upload translation strings and download translations
              # IMPORTANT: if this fails due to a Crowdin error like "Project already contains the file"
              # Sometimes Crowdin refuse to upload the new versioned docs for obscure reasons
              # Workaround: upload manually the new versioned files through the Crowdin UI...
              # If the files already exist on Crowdin, the source upload will now work...
              # All this has been extensively reported to their support already.
              yarn crowdin-upload

              # download only enabled languages
              yarn crowdin-download
              # for lang in fr ko ru ro pt-BR zh-CN
              # do
              #    yarn crowdin-download -l $lang
              # done

              # publish
              GIT_USER=docusaurus-bot USE_SSH=false FORCE_DEPLOY=true yarn run publish-gh-pages
            else
              echo "Skipping deploy."
            fi

# Workflows enables us to run multiple jobs in parallel
workflows:
  version: 2

  tests-and-deploy-v1:
    jobs:
      - tests-v1:
          filters: *filter-only-master
      - deploy-website-v1:
          requires:
            - tests-v1
          filters: *filter-only-master
